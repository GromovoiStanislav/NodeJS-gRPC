/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 4.24.3
 * source: help.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export enum Topic {
    BUILD = 0,
    PACK = 1,
    INIT = 2
}
export class Help extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        topic?: Topic;
        message?: string;
        short?: string;
        generated_via?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("topic" in data && data.topic != undefined) {
                this.topic = data.topic;
            }
            if ("message" in data && data.message != undefined) {
                this.message = data.message;
            }
            if ("short" in data && data.short != undefined) {
                this.short = data.short;
            }
            if ("generated_via" in data && data.generated_via != undefined) {
                this.generated_via = data.generated_via;
            }
        }
    }
    get topic() {
        return pb_1.Message.getFieldWithDefault(this, 1, Topic.BUILD) as Topic;
    }
    set topic(value: Topic) {
        pb_1.Message.setField(this, 1, value);
    }
    get message() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set message(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get short() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set short(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get generated_via() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set generated_via(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        topic?: Topic;
        message?: string;
        short?: string;
        generated_via?: string;
    }): Help {
        const message = new Help({});
        if (data.topic != null) {
            message.topic = data.topic;
        }
        if (data.message != null) {
            message.message = data.message;
        }
        if (data.short != null) {
            message.short = data.short;
        }
        if (data.generated_via != null) {
            message.generated_via = data.generated_via;
        }
        return message;
    }
    toObject() {
        const data: {
            topic?: Topic;
            message?: string;
            short?: string;
            generated_via?: string;
        } = {};
        if (this.topic != null) {
            data.topic = this.topic;
        }
        if (this.message != null) {
            data.message = this.message;
        }
        if (this.short != null) {
            data.short = this.short;
        }
        if (this.generated_via != null) {
            data.generated_via = this.generated_via;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.topic != Topic.BUILD)
            writer.writeEnum(1, this.topic);
        if (this.message.length)
            writer.writeString(2, this.message);
        if (this.short.length)
            writer.writeString(3, this.short);
        if (this.generated_via.length)
            writer.writeString(4, this.generated_via);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Help {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Help();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.topic = reader.readEnum();
                    break;
                case 2:
                    message.message = reader.readString();
                    break;
                case 3:
                    message.short = reader.readString();
                    break;
                case 4:
                    message.generated_via = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Help {
        return Help.deserialize(bytes);
    }
}
