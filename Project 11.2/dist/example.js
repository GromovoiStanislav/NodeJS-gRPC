/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 4.24.3
 * source: example.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export var example;
(function (example) {
    class MyMessage extends pb_1.Message {
        #one_of_decls = [];
        constructor(data) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("age" in data && data.age != undefined) {
                    this.age = data.age;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "");
        }
        set name(value) {
            pb_1.Message.setField(this, 1, value);
        }
        get age() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0);
        }
        set age(value) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data) {
            const message = new MyMessage({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.age != null) {
                message.age = data.age;
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.age != null) {
                data.age = this.age;
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.age != 0)
                writer.writeInt32(2, this.age);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MyMessage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.age = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return MyMessage.deserialize(bytes);
        }
    }
    example.MyMessage = MyMessage;
    class UnimplementedMyServiceService {
        static definition = {
            DoSomething: {
                path: "/example.MyService/DoSomething",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes) => MyMessage.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes) => MyMessage.deserialize(new Uint8Array(bytes))
            }
        };
    }
    example.UnimplementedMyServiceService = UnimplementedMyServiceService;
    class MyServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedMyServiceService.definition, "MyService", {}) {
        constructor(address, credentials, options) {
            super(address, credentials, options);
        }
        DoSomething = (message, metadata, options, callback) => {
            return super.DoSomething(message, metadata, options, callback);
        };
    }
    example.MyServiceClient = MyServiceClient;
})(example || (example = {}));
